!!EXTRA CODES

Patch "Retain Ground Velocity for Jump" in "Physics" by "Hyper" 
//
    static bool IsStateJump = false;
//
{
    fixed (bool* pIsStateJump = &IsStateJump)
    {
        // StateJumpStart
        WriteAsmHook
        (
            $@"
                mov  rbx, [rdx + 0x48]
                mov  rsi, rdx
                mov  rbp, rcx
                mov  edx, 0x25
                push rax
                mov  rax, {(long)pIsStateJump}
                mov  byte ptr [rax], 1
                pop  rax
            ",

            /* 0x14B462638 */
            ScanSignature
            (
                "\x48\x8B\x5A\x48\x48\x89\xD6\x48\x89\xCD\xBA\x25\x00\x00\x00",
                "xxxxxxxxxxxxxxx"
            ),

            HookBehavior.Replace
        );
        
        /* v1.20: 0x1407F44EF */
        var callerFuncAddr = ScanSignature
        (
            "\xE8\xCC\xCC\xCC\xCC\x48\x8B\x43\x20\xBA\x20\x16\x1E\x71",
            "x????xxxxxxxxx"
        );

        /* v1.20: 0x1407C3B50 */
        var mainFuncAddr = callerFuncAddr + Read<int>(callerFuncAddr + 0x01) + 0x05;

        // Update posture to allow retaining ground velocity.
        WriteAsmHook
        (
            $@"
                mov rdi, rcx

                ; Check if we're in the jump state
                push r11
                mov  r11, {(long)pIsStateJump}
                mov  r11b, byte ptr [r11]
                cmp  r11b, 0
                jz   default
                mov  al, 1
                jmp  exit

            default:
                xor  edx, edx
                mov  rcx, [rcx + 0x28] ; RCX = BlackboardStatus
                mov  rax, [rcx + 0x38] ; RAX = bit flags
                mov  edx, edx
                bt   rax, rdx
                setb al

            exit:
                pop r11
            ",

            /* 0x1407C3B56 */
            mainFuncAddr + 6,

            HookBehavior.Replace
        );

        // StateJumpEnd
        WriteAsmHook
        (
            $@"
                xor  ecx, 0x1B120AB6
                mov  edx, ecx
                mov  edi, r8d
                mov  rcx, [rax + 0x80]
                push rax
                mov  rax, {(long)pIsStateJump}
                mov  byte ptr [rax], 0
                pop  rax
            ",

            /* 0x14B47F0A7 */
            ScanSignature
            (
                "\x81\xF1\xB6\x0A\x12\x1B",
                "xxxxxx"
            ),

            HookBehavior.Replace
        );
    }
}

Patch "Disable Double Jump" in "lol" by "WasifBoomz"
{
    WriteProtected<byte>(
        0x141364B18,
        0x70, 0x5B, 0x07
    );
}